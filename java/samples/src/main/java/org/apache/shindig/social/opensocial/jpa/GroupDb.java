/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package org.apache.shindig.social.opensocial.jpa;

import static javax.persistence.GenerationType.IDENTITY;

import org.apache.shindig.social.opensocial.jpa.api.DbObject;
import org.apache.shindig.social.opensocial.model.ListField;
import org.apache.shindig.social.opensocial.model.Person;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.MapKey;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;

import java.util.List;
import java.util.Map;

/**
 * Represents a group in the social database. The assumption in this object is that groups are
 * associated with individuals and are used by those individuals to manage people.
 */
@Entity
@Table(name = "person_group")
public class GroupDb implements DbObject {
  /**
   * The internal object ID used for references to this object. Should be generated by the
   * underlying storage mechanism
   */
  @Id
  @GeneratedValue(strategy = IDENTITY)
  @Column(name = "oid")
  protected long objectId;

  /**
   * An optimistic locking field.
   */
  @Version
  @Column(name = "version")
  protected long version;

  /**
   * There is a single owner of a group.
   */
  @ManyToOne(targetEntity = PersonDb.class)
  @JoinColumn(name = "person_id", referencedColumnName = "oid")
  protected Person owner;

  /**
   * There are many members of a group.
   */
  @ManyToMany(targetEntity = PersonDb.class)
  @JoinTable(name = "membership", 
      joinColumns = 
        @JoinColumn(name = "group_id", referencedColumnName = "oid"), 
      inverseJoinColumns = 
        @JoinColumn(name = "person_id", referencedColumnName = "oid"))
  protected List<Person> members;

  /**
   * Each group has a group Id.
   */
  @Basic
  @Column(name = "id", length = 255)
  protected String id;

  /**
   * The group has properties.
   */
  @OneToMany(targetEntity = GroupPropertyDb.class, mappedBy = "group")
  @MapKey(name = "type")
  protected Map<String, ListField> properties;

  /**
   * @return the owner
   */
  public Person getOwner() {
    return owner;
  }

  /**
   * @param owner the owner to set
   */
  public void setOwner(Person owner) {
    this.owner = owner;
  }

  /**
   * @return the members
   */
  public List<Person> getMembers() {
    return members;
  }

  /**
   * @param members the members to set
   */
  public void setMembers(List<Person> members) {
    this.members = members;
  }

  /**
   * @return the id
   */
  public String getId() {
    return id;
  }

  /**
   * @param id the id to set
   */
  public void setId(String id) {
    this.id = id;
  }

  /**
   * @return the objectId
   */
  public long getObjectId() {
    return objectId;
  }

  /**
   * @return the version
   */
  public long getVersion() {
    return version;
  }

  /**
   * @return the properties
   */
  public Map<String, ListField> getProperties() {
    return properties;
  }

  /**
   * @param properties the properties to set
   */
  public void setProperties(Map<String, ListField> properties) {
    this.properties = properties;
  }

}
