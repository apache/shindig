<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<Module>
  <ModulePrefs title="EndToEndTest">
    <Require feature="opensocial-0.8" />
    <Require feature="views" />
    <Optional feature="content-rewrite">
      <Param name="exclude-urls">.*</Param>
    </Optional>
  </ModulePrefs>
  <Content type="html">
    <![CDATA[
      <script type="text/javascript" src="/testframework.js"></script>
      <script type="text/javascript">

        var tests = {
          /** Test 404 */
          notFoundError: function() {
            errorTestCase(404, opensocial.ResponseItem.Error.BAD_REQUEST);
          },

          /** Test 400 */
          badRequestError: function() {
            errorTestCase(400, opensocial.ResponseItem.Error.BAD_REQUEST);
          },

          /** Test 500 */
          internalError: function() {
            errorTestCase(500, opensocial.ResponseItem.Error.INTERNAL_ERROR);
          }
        };
        

        /** Test a single error code case */
        function errorTestCase(httpCode, errorCode) {
          var req = opensocial.newDataRequest();

          // Request the "canonical" viewer
          req.add(req.newFetchPersonRequest("canonical"), "canonical");

          function receivedData(response) {
            assertTrue("Expecting error", response.hadError());
            var dataItem = response.get("canonical");
            assertFalse("Expecting data item", dataItem == undefined);
            assertTrue("Expecting item error", dataItem.hadError());
            assertEquals("Mismatched error code", errorCode, dataItem.getErrorCode());

            finished();
          }

          // Send the request
          req.send(receivedData);
        }
      </script>
    ]]>
  </Content>
</Module>
