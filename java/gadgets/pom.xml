<?xml version="1.0" encoding="UTF-8"?>
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.shindig</groupId>
  <artifactId>gadgets</artifactId>
  <packaging>war</packaging>
  <name>Shindig Gadget Server</name>
  <version>1.0</version>
  <url>http://shindig.apache.org</url>
  <licenses>
    <license>
      <name>Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <build>
    <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
    <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
    <outputDirectory>${basedir}/target/classes</outputDirectory>
    <testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
    <finalName>gadgets</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <!-- this is relative to the pom.xml directory -->
              <directory>../../javascript/</directory>
              <targetPath>files</targetPath>
              <includes>
                <include>**/*.*</include>
              </includes>
            </resource>
          </webResources>
         </configuration>  
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins </groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <configuration>
              <wtpversion>1.0</wtpversion>
          </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <fork>true</fork>
          <compilerArguments>
            <!-- A common distribution of hamcrest library includes .java files that are newer than the corresponding .class files.  Because sourcepath defaults to classpath, if we do not set this, then we end up with some of hamcrest's classes in our jar.  This is silly and not what we want, so we explicitly set sourcepath to something that is not a directory.  If you have a directory on your machine that is called /not_a_directory and contains .java files that are newer than .class files with a similar name that are imported by our code, then you will probably experience trouble. -->
            <sourcepath>/not_a_directory</sourcepath>
          </compilerArguments>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludeResources>true</excludeResources>
          <attach>true</attach>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <targetPath>features</targetPath>
        <directory>../../features</directory>
      </resource>
    </resources>
  </build>
  <repositories>
    <repository>
      <id>caja</id>
      <url>http://google-caja.googlecode.com/svn/maven</url>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20070829</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>2.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymockclassextension</artifactId>
      <version>2.2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>caja</groupId>
      <artifactId>caja</artifactId>
      <version>r422</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <distributionManagement>
    <repository>
      <id>apache-repository</id>
      <name>Apache Repository</name>
      <url>scp://people.apache.org/repository/maven2</url>
    </repository>
  </distributionManagement>
</project>
