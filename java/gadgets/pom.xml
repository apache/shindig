<?xml version="1.0" encoding="UTF-8"?><!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.shindig</groupId>
    <artifactId>shindig-parent</artifactId>
    <version>1.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>shindig-gadgets</artifactId>
  <packaging>jar</packaging>

  <name>Apache Shindig Gadget Renderer</name>
  <description>Renders gadgets, provides the gadget metadata service, and serves
    all javascript required by the OpenSocial specification.</description>

  <scm>
    <connection>scm:svn:http://svn.apache.org/repos/asf/incubator/shindig/trunk/java/gadgets</connection>
    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/incubator/shindig/trunk/java/gadgets</developerConnection>
    <url>http://svn.apache.org/viewvc/incubator/shindig/trunk/java/gadgets</url>
  </scm>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <!-- this is relative to the pom.xml directory -->
              <directory>${basedir}/../../javascript/</directory>
              <targetPath>files</targetPath>
              <includes>
                <include>**/*.*</include>
              </includes>
            </resource>
          </webResources>
         </configuration>
         <executions>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins </groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <fork>true</fork>
          <compilerArguments>
            <!-- A common distribution of hamcrest library includes .java files that are newer than the corresponding .class files.  Because sourcepath defaults to classpath, if we do not set this, then we end up with some of hamcrest's classes in our jar.  This is silly and not what we want, so we explicitly set sourcepath to something that is not a directory.  If you have a directory on your machine that is called /not_a_directory and contains .java files that are newer than .class files with a similar name that are imported by our code, then you will probably experience trouble. -->
            <sourcepath>/not_a_directory</sourcepath>
          </compilerArguments>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <!-- duplicated here for the jar build. -->
        <!-- TODO: Eliminate duplicate copies in WAR output -->
        <!-- this is relative to the pom.xml directory -->
        <directory>${basedir}/../../javascript/</directory>
        <targetPath>files</targetPath>
        <includes>
          <include>**/*.*</include>
        </includes>
      </resource>
      <resource>
        <targetPath>config</targetPath>
        <directory>${basedir}/../../config</directory>
        <includes>
          <include>oauth.json</include>
        </includes>
      </resource>
    </resources>
  </build>

  <dependencies>
    <!-- project dependencies -->
    <dependency>
      <groupId>org.apache.shindig</groupId>
      <artifactId>shindig-common</artifactId>
    </dependency>

    <!--
      external dependencies
      where the depedency version is defined in dependency Management,
      there is no need for the version, and it should not be put in
      so we have a single place to change the version
    -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
    </dependency>
    <dependency>
      <groupId>caja</groupId>
      <artifactId>caja</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>caja</groupId>
      <artifactId>json_simple</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.oauth</groupId>
      <artifactId>core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.collections</groupId>
      <artifactId>google-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.guice</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>rome</groupId>
      <artifactId>rome</artifactId>
    </dependency>
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
    </dependency>
  </dependencies>
</project>
