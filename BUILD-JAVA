Installing and running the  java server
============================================

1) Install Maven 2.0 (see http://maven.apache.org)

2) Make sure the JAVA_HOME environment variable is set to the location of your
   JDK/JRE, and that the maven executable is in your PATH.

3) From the base source directory ( eg cd .. )
  * mvn - Cleans the source tree and then builds all the java classes, packages them into jars
    and installs them in your local repository also adds source jars ( by default ~/.m2/repository on Unix/OSX) 
  * mvn install - does the above but does not clean first
  * mvn -Psocial - builds only the social parts
  * mvn -Pgadgets - builds only the gadget parts
 
  You must perform at least a "mvn" to place build all the artifacts and place them in you local
  maven repository.
  
4) To Run, using a embedded Jetty Webapp container, in the base project directory (eg cd .. )
   * First do a full build as in step 3
   * mvn -Prun - to run Jetty with both social and gadgets
   * mvn -Prun -DrunType=gadgets - to run Jetty with only the gadgets server
   * mvn -Prun -DrunType=social - to run Jetty with only the social server

5) To Run with a differnt port
   * cd java/server
   * mvn clean install jetty:run -DrunType=<full|gadgets|social> -Djetty.port=<port>

6) Once running, this url http://localhost:<port>/social/data will accept POST requests 
   to update or fetch data. In order to see this code in action follow the README in java/server.


---------------------------------------------

To use with eclipse

1) Start Eclipse to create a workspace

2) Set the M2_REPO environment variable 
   either

      mvn -Declipse.workspace=<path-to-eclipse-workspace> eclipse:add-maven-repo

   or
 
     In Eclipse edit the Preferences->Java->Build->Classpath Variables and point create M2_REPO to
     point to ~/.m2/repository (Unix) or whereever you local maven repositroy is

3) In the project base directory
   
   mvn eclipse:eclipse

  if you want all the Source files for all the dependencies do

  mvn eclipse:eclipse -DdownloadSources=true


4) In Eclipse

    Import new project with File->Import->Existing Project

NB. 
At the moment, you will have to edit the source dependencies to remove nested folders.
On each project, edit properties, Build Path, Source and remove missing Source folders.

There is a BUG report MECLIPSE-444 reporting this to maven-eclipse-plugin.

   

For more information, see http://incubator.apache.org/projects/shindig.html

