<?xml version="1.0"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
-->
<feature>
  <name>opensocial-samplecontainer</name>
  <dependency>opensocial-reference</dependency>
  <dependency>caja</dependency>
  <gadget>
    <script src="samplecontainer.js"></script>
    <script src="caja-compatible-jquery.js"></script>
    <script src="statefileparser.js"></script>
    <script>
      opensocial.Container.setContainer(new opensocial.SampleContainer());
      opensocial.Container.get().enableCaja();

      var stateUrl = "/gadgets/files/samplecontainer/state-basicfriendlist.xml";
      <!--TODO(doll): The cookies.js file needs to be moved into a feature so we can use it here-->
      <!--var cookieUrl = decodeURIComponent(goog.net.cookies.get('sampleContainerStateUrl'));-->
      <!--if (cookieUrl &amp;&amp; cookieUrl != "undefined") {-->
        <!--stateUrl = cookieUrl;-->
      <!--}-->

      var messageDiv = {"innerHTML" : "ignoring for now"};

      function toggleStateType() {
        if (document.getElementById("stateTypeUrl").checked) {
          document.getElementById("stateUrl").style.display = "block";
          document.getElementById("stateXml").style.display = "none";
        } else {
          document.getElementById("stateUrl").style.display = "none";
          document.getElementById("stateXml").style.display = "block";
        }
      }

      function showXmlState() {
        document.getElementById("stateTypeUrl").checked = false;
        document.getElementById("stateTypeXml").checked = true;
        toggleStateType();
      }

      function changeState() {
        if (document.getElementById("stateTypeUrl").checked) {
          changeStateUrl();
        } else {
          changeStateXml();
        }
      }

      function initSampleContainer() {
        var usePermissive = gadgets.util.getUrlParameters()["usepermissive"];
        if (usePermissive) {
          ___.getKeeper().setEnabled(true);
        }
        changeStateUrl();
      }

      function changeStateUrl() {
        stateUrl = document.getElementById("stateUrl").value;
        StateFileParser.refreshState(stateUrl, messageDiv,
            opensocial.Container.get(), function() {gadgets.util.runOnLoadHandlers(); dumpState();});
      }

      function changeStateXml() {
        var stateXml = document.getElementById("stateXml").value;
        var stateXmlObject = (new DOMParser()).parseFromString(stateXml, "text/xml");
        StateFileParser.onLoadState(stateXmlObject, null, messageDiv,
            opensocial.Container.get(), function() {gadgets.util.runOnLoadHandlers();});
      }

      function dumpState() {
        StateFileParser.dumpState(opensocial.Container.get(), document.getElementById("stateXml"));
      }

      function changeEvilness() {
        opensocial.Container.get().setEvilness(document.getElementById("doEvilCheckbox").checked);
        changeState();
      }

      var stateHtml = "&lt;div style=\"padding: 5px; margin-bottom: 20px; background-color: #FAFAD2;"
          + "color: #DAA520; font-size: smaller; font-weight:bold\"&gt;Displaying state:"
          + "&lt;input type=\"radio\" id=\"stateTypeUrl\" name=\"stateType\" value=\"url\" onclick=\"toggleStateType()\" checked=\"checked\" &gt;use url&lt;/input&gt;"
          + "&lt;input type=\"radio\" id=\"stateTypeXml\" name=\"stateType\" value=\"xml\" onclick=\"toggleStateType()\"&gt;use textbox&lt;/input&gt;"
          + "&lt;input type=\"button\" value=\"load\" onclick=\"changeState();\"/&gt;"
          + "&lt;input type=\"button\" value=\"dump\" onclick=\"dumpState(); showXmlState();\"/&gt;"
          + "&lt;input type=\"checkbox\" id=\"doEvilCheckbox\" onclick=\"changeEvilness();\" &gt;do evil&lt;/input&gt;"
          + "&lt;input type=\"text\" size=\"75\" id=\"stateUrl\" style=\"display:block;\"/&gt;"
          + "&lt;textarea id=\"stateXml\" rows=\"15\" cols=\"120\" style=\"display:none;\" &gt;&lt;/textarea&gt;"
          + "&lt;/div&gt;";

      document.write(stateHtml);
      document.getElementById("stateUrl").value = stateUrl;
      initSampleContainer();

    </script>
  </gadget>
</feature>
